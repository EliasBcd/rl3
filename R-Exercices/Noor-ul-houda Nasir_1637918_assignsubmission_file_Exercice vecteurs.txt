R version 4.2.1 (2022-06-23) -- "Funny-Looking Kid"
Copyright (C) 2022 The R Foundation for Statistical Computing
Platform: x86_64-pc-linux-gnu (64-bit)

R is free software and comes with ABSOLUTELY NO WARRANTY.
You are welcome to redistribute it under certain conditions.
Type 'license()' or 'licence()' for distribution details.

R is a collaborative project with many contributors.
Type 'contributors()' for more information and
'citation()' on how to cite R or R packages in publications.

Type 'demo()' for some demos, 'help()' for on-line help, or
'help.start()' for an HTML browser interface to help.
Type 'q()' to quit R.

> install.packages('swirl')
Installing package into ‘/cloud/lib/x86_64-pc-linux-gnu-library/4.2’
(as ‘lib’ is unspecified)
also installing the dependencies ‘utf8’, ‘pillar’, ‘pkgconfig’, ‘vctrs’, ‘sys’, ‘rprojroot’, ‘fs’, ‘diffobj’, ‘fansi’, ‘rematch2’, ‘tibble’, ‘askpass’, ‘glue’, ‘magrittr’, ‘stringi’, ‘brio’, ‘callr’, ‘cli’, ‘crayon’, ‘desc’, ‘ellipsis’, ‘evaluate’, ‘jsonlite’, ‘lifecycle’, ‘pkgload’, ‘praise’, ‘processx’, ‘ps’, ‘R6’, ‘rlang’, ‘waldo’, ‘withr’, ‘curl’, ‘mime’, ‘openssl’, ‘bitops’, ‘stringr’, ‘testthat’, ‘httr’, ‘yaml’, ‘RCurl’, ‘digest’

trying URL 'http://rspm/default/__linux__/focal/latest/src/contrib/utf8_1.2.2.tar.gz'
Content type 'application/x-gzip' length 236735 bytes (231 KB)
==================================================
downloaded 231 KB

trying URL 'http://rspm/default/__linux__/focal/latest/src/contrib/pillar_1.8.1.tar.gz'
Content type 'application/x-gzip' length 674653 bytes (658 KB)
==================================================
downloaded 658 KB

trying URL 'http://rspm/default/__linux__/focal/latest/src/contrib/pkgconfig_2.0.3.tar.gz'
Content type 'application/x-gzip' length 17376 bytes (16 KB)
==================================================
downloaded 16 KB

trying URL 'http://rspm/default/__linux__/focal/latest/src/contrib/vctrs_0.4.2.tar.gz'
Content type 'application/x-gzip' length 2132181 bytes (2.0 MB)
==================================================
downloaded 2.0 MB

trying URL 'http://rspm/default/__linux__/focal/latest/src/contrib/sys_3.4.tar.gz'
Content type 'application/x-gzip' length 55135 bytes (53 KB)
==================================================
downloaded 53 KB

trying URL 'http://rspm/default/__linux__/focal/latest/src/contrib/rprojroot_2.0.3.tar.gz'
Content type 'application/x-gzip' length 100991 bytes (98 KB)
==================================================
downloaded 98 KB

trying URL 'http://rspm/default/__linux__/focal/latest/src/contrib/fs_1.5.2.tar.gz'
Content type 'application/x-gzip' length 760048 bytes (742 KB)
==================================================
downloaded 742 KB

trying URL 'http://rspm/default/__linux__/focal/latest/src/contrib/diffobj_0.3.5.tar.gz'
Content type 'application/x-gzip' length 1007502 bytes (983 KB)
==================================================
downloaded 983 KB

trying URL 'http://rspm/default/__linux__/focal/latest/src/contrib/fansi_1.0.3.tar.gz'
Content type 'application/x-gzip' length 413211 bytes (403 KB)
==================================================
downloaded 403 KB

trying URL 'http://rspm/default/__linux__/focal/latest/src/contrib/rematch2_2.1.2.tar.gz'
Content type 'application/x-gzip' length 44269 bytes (43 KB)
==================================================
downloaded 43 KB

trying URL 'http://rspm/default/__linux__/focal/latest/src/contrib/tibble_3.1.8.tar.gz'
Content type 'application/x-gzip' length 727025 bytes (709 KB)
==================================================
downloaded 709 KB

trying URL 'http://rspm/default/__linux__/focal/latest/src/contrib/askpass_1.1.tar.gz'
Content type 'application/x-gzip' length 23822 bytes (23 KB)
==================================================
downloaded 23 KB

trying URL 'http://rspm/default/__linux__/focal/latest/src/contrib/glue_1.6.2.tar.gz'
Content type 'application/x-gzip' length 157185 bytes (153 KB)
==================================================
downloaded 153 KB

trying URL 'http://rspm/default/__linux__/focal/latest/src/contrib/magrittr_2.0.3.tar.gz'
Content type 'application/x-gzip' length 234989 bytes (229 KB)
==================================================
downloaded 229 KB

trying URL 'http://rspm/default/__linux__/focal/latest/src/contrib/stringi_1.7.8.tar.gz'
Content type 'application/x-gzip' length 3201641 bytes (3.1 MB)
==================================================
downloaded 3.1 MB

trying URL 'http://rspm/default/__linux__/focal/latest/src/contrib/brio_1.1.3.tar.gz'
Content type 'application/x-gzip' length 44728 bytes (43 KB)
==================================================
downloaded 43 KB

trying URL 'http://rspm/default/__linux__/focal/latest/src/contrib/callr_3.7.2.tar.gz'
Content type 'application/x-gzip' length 417661 bytes (407 KB)
==================================================
downloaded 407 KB

trying URL 'http://rspm/default/__linux__/focal/latest/src/contrib/cli_3.4.1.tar.gz'
Content type 'application/x-gzip' length 1306037 bytes (1.2 MB)
==================================================
downloaded 1.2 MB

trying URL 'http://rspm/default/__linux__/focal/latest/src/contrib/crayon_1.5.2.tar.gz'
Content type 'application/x-gzip' length 158110 bytes (154 KB)
==================================================
downloaded 154 KB

trying URL 'http://rspm/default/__linux__/focal/latest/src/contrib/desc_1.4.2.tar.gz'
Content type 'application/x-gzip' length 317043 bytes (309 KB)
==================================================
downloaded 309 KB

trying URL 'http://rspm/default/__linux__/focal/latest/src/contrib/ellipsis_0.3.2.tar.gz'
Content type 'application/x-gzip' length 40284 bytes (39 KB)
==================================================
downloaded 39 KB

trying URL 'http://rspm/default/__linux__/focal/latest/src/contrib/evaluate_0.16.tar.gz'
Content type 'application/x-gzip' length 76788 bytes (74 KB)
==================================================
downloaded 74 KB

trying URL 'http://rspm/default/__linux__/focal/latest/src/contrib/jsonlite_1.8.0.tar.gz'
Content type 'application/x-gzip' length 1158740 bytes (1.1 MB)
==================================================
downloaded 1.1 MB

trying URL 'http://rspm/default/__linux__/focal/latest/src/contrib/lifecycle_1.0.2.tar.gz'
Content type 'application/x-gzip' length 106211 bytes (103 KB)
==================================================
downloaded 103 KB

trying URL 'http://rspm/default/__linux__/focal/latest/src/contrib/pkgload_1.3.0.tar.gz'
Content type 'application/x-gzip' length 169478 bytes (165 KB)
==================================================
downloaded 165 KB

trying URL 'http://rspm/default/__linux__/focal/latest/src/contrib/praise_1.0.0.tar.gz'
Content type 'application/x-gzip' length 15926 bytes (15 KB)
==================================================
downloaded 15 KB

trying URL 'http://rspm/default/__linux__/focal/latest/src/contrib/processx_3.7.0.tar.gz'
Content type 'application/x-gzip' length 444938 bytes (434 KB)
==================================================
downloaded 434 KB

trying URL 'http://rspm/default/__linux__/focal/latest/src/contrib/ps_1.7.1.tar.gz'
Content type 'application/x-gzip' length 387432 bytes (378 KB)
==================================================
downloaded 378 KB

trying URL 'http://rspm/default/__linux__/focal/latest/src/contrib/R6_2.5.1.tar.gz'
Content type 'application/x-gzip' length 82477 bytes (80 KB)
==================================================
downloaded 80 KB

trying URL 'http://rspm/default/__linux__/focal/latest/src/contrib/rlang_1.0.6.tar.gz'
Content type 'application/x-gzip' length 1923948 bytes (1.8 MB)
==================================================
downloaded 1.8 MB

trying URL 'http://rspm/default/__linux__/focal/latest/src/contrib/waldo_0.4.0.tar.gz'
Content type 'application/x-gzip' length 99901 bytes (97 KB)
==================================================
downloaded 97 KB

trying URL 'http://rspm/default/__linux__/focal/latest/src/contrib/withr_2.5.0.tar.gz'
Content type 'application/x-gzip' length 225454 bytes (220 KB)
==================================================
downloaded 220 KB

trying URL 'http://rspm/default/__linux__/focal/latest/src/contrib/curl_4.3.2.tar.gz'
Content type 'application/x-gzip' length 905296 bytes (884 KB)
==================================================
downloaded 884 KB

trying URL 'http://rspm/default/__linux__/focal/latest/src/contrib/mime_0.12.tar.gz'
Content type 'application/x-gzip' length 37125 bytes (36 KB)
==================================================
downloaded 36 KB

trying URL 'http://rspm/default/__linux__/focal/latest/src/contrib/openssl_2.0.3.tar.gz'
Content type 'application/x-gzip' length 1400287 bytes (1.3 MB)
==================================================
downloaded 1.3 MB

trying URL 'http://rspm/default/__linux__/focal/latest/src/contrib/bitops_1.0-7.tar.gz'
Content type 'application/x-gzip' length 35531 bytes (34 KB)
==================================================
downloaded 34 KB

trying URL 'http://rspm/default/__linux__/focal/latest/src/contrib/stringr_1.4.1.tar.gz'
Content type 'application/x-gzip' length 206809 bytes (201 KB)
==================================================
downloaded 201 KB

trying URL 'http://rspm/default/__linux__/focal/latest/src/contrib/testthat_3.1.4.tar.gz'
Content type 'application/x-gzip' length 3612810 bytes (3.4 MB)
==================================================
downloaded 3.4 MB

trying URL 'http://rspm/default/__linux__/focal/latest/src/contrib/httr_1.4.4.tar.gz'
Content type 'application/x-gzip' length 498400 bytes (486 KB)
==================================================
downloaded 486 KB

trying URL 'http://rspm/default/__linux__/focal/latest/src/contrib/yaml_2.3.5.tar.gz'
Content type 'application/x-gzip' length 286243 bytes (279 KB)
==================================================
downloaded 279 KB

trying URL 'http://rspm/default/__linux__/focal/latest/src/contrib/RCurl_1.98-1.8.tar.gz'
Content type 'application/x-gzip' length 1122428 bytes (1.1 MB)
==================================================
downloaded 1.1 MB

trying URL 'http://rspm/default/__linux__/focal/latest/src/contrib/digest_0.6.29.tar.gz'
Content type 'application/x-gzip' length 357092 bytes (348 KB)
==================================================
downloaded 348 KB

trying URL 'http://rspm/default/__linux__/focal/latest/src/contrib/swirl_2.4.5.tar.gz'
Content type 'application/x-gzip' length 347115 bytes (338 KB)
==================================================
downloaded 338 KB

* installing *binary* package ‘utf8’ ...
* DONE (utf8)
* installing *binary* package ‘pkgconfig’ ...
* DONE (pkgconfig)
* installing *binary* package ‘sys’ ...
* DONE (sys)
* installing *binary* package ‘rprojroot’ ...
* DONE (rprojroot)
* installing *binary* package ‘fs’ ...
* DONE (fs)
* installing *binary* package ‘fansi’ ...
* DONE (fansi)
* installing *binary* package ‘glue’ ...
* DONE (glue)
* installing *binary* package ‘magrittr’ ...
* DONE (magrittr)
* installing *binary* package ‘stringi’ ...
* DONE (stringi)
* installing *binary* package ‘brio’ ...
* DONE (brio)
* installing *binary* package ‘cli’ ...
* DONE (cli)
* installing *binary* package ‘crayon’ ...
* DONE (crayon)
* installing *binary* package ‘evaluate’ ...
* DONE (evaluate)
* installing *binary* package ‘jsonlite’ ...
* DONE (jsonlite)
* installing *binary* package ‘praise’ ...
* DONE (praise)
* installing *binary* package ‘ps’ ...
* DONE (ps)
* installing *binary* package ‘R6’ ...
* DONE (R6)
* installing *binary* package ‘rlang’ ...
* DONE (rlang)
* installing *binary* package ‘withr’ ...
* DONE (withr)
* installing *binary* package ‘curl’ ...
* DONE (curl)
* installing *binary* package ‘mime’ ...
* DONE (mime)
* installing *binary* package ‘bitops’ ...
* DONE (bitops)
* installing *binary* package ‘yaml’ ...
* DONE (yaml)
* installing *binary* package ‘digest’ ...
* DONE (digest)
* installing *binary* package ‘vctrs’ ...
* DONE (vctrs)
* installing *binary* package ‘diffobj’ ...
* DONE (diffobj)
* installing *binary* package ‘askpass’ ...
* DONE (askpass)
* installing *binary* package ‘desc’ ...
* DONE (desc)
* installing *binary* package ‘ellipsis’ ...
* DONE (ellipsis)
* installing *binary* package ‘lifecycle’ ...
* DONE (lifecycle)
* installing *binary* package ‘processx’ ...
* DONE (processx)
* installing *binary* package ‘stringr’ ...
* DONE (stringr)
* installing *binary* package ‘RCurl’ ...
* DONE (RCurl)
* installing *binary* package ‘pillar’ ...
* DONE (pillar)
* installing *binary* package ‘callr’ ...
* DONE (callr)
* installing *binary* package ‘pkgload’ ...
* DONE (pkgload)
* installing *binary* package ‘openssl’ ...
* DONE (openssl)
* installing *binary* package ‘tibble’ ...
* DONE (tibble)
* installing *binary* package ‘httr’ ...
* DONE (httr)
* installing *binary* package ‘rematch2’ ...
* DONE (rematch2)
* installing *binary* package ‘waldo’ ...
* DONE (waldo)
* installing *binary* package ‘testthat’ ...
* DONE (testthat)
* installing *binary* package ‘swirl’ ...
* DONE (swirl)

The downloaded source packages are in
	‘/tmp/RtmpjFlJDc/downloaded_packages’
> library(swirl)

| Hi! Type swirl() when you are ready to begin.

> install_course_github("EliasBcd", "InitiationR")
Downloading: 49 kB      
> swirl()

| Welcome to swirl! Please sign in. If you've been here before, use the same name
| as you did then. If you are new, call yourself something unique.

What shall I call you? Noor

| Thanks, Noor. Let's cover a couple of quick housekeeping items before we begin
| our first lesson. First of all, you should know that when you see '...', that
| means you should press Enter when you are done reading and ready to continue.

...  <-- That's your cue to press Enter to continue

| Also, when you see 'ANSWER:', the R prompt (>), or when you are asked to select
| from a list, that means it's your turn to enter a response, then press Enter to
| continue.

Select 1, 2, or 3 and press Enter 

1: Continue.
2: Proceed.
3: Let's get going!

Selection: 1

| You can exit swirl and return to the R prompt (>) at any time by pressing the Esc
| key. If you are already at the prompt, type bye() to exit and save your progress.
| When you exit properly, you'll see a short message letting you know you've done
| so.

| When you are at the R prompt (>):
| -- Typing skip() allows you to skip the current question.
| -- Typing play() lets you experiment with R on your own; swirl will ignore what
| you do...
| -- UNTIL you type nxt() which will regain swirl's attention.
| -- Typing bye() causes swirl to exit. Your progress will be saved.
| -- Typing main() returns you to swirl's main menu.
| -- Typing info() displays these options again.

| Let's get started!

...

| Please choose a course, or type 0 to exit swirl.

1: InitiationR
2: Take me to the swirl course repository!

Selection: 1

| Please choose a lesson, or type 0 to return to course menu.

1: Manipulations simples
2: Assignations et objets
3: Types
4: Vecteurs
5: Fichiers et espace de travail
6: Logique
7: Valeurs manquantes
8: Vecteurs numériques
9: Dataframes

Selection: 4

| Attempting to load lesson dependencies...

| This lesson requires the ‘base64enc’ package. Would you like me to install it for
| you now?

1: Yes
2: No

Selection: 1

| Trying to install package ‘base64enc’ now...

| Package ‘base64enc’ loaded correctly!

  |                                                                          |   0%

| Nous verrons dans cette leçon les vecteurs plus en détails.

...

  |==                                                                        |   3%
| Nous avons vu que nous pouvons créer un vecteur à l'aide de la commande c().
| Reprenez le vecteur contenant les tailles précédentes, tapez c(156, 164, 197).
| Essayez et stockez le résultat dans l'objet tailles.

> c(156,164,197)
[1] 156 164 197

| That's not the answer I was looking for, but try again. Or, type info() for more
| options.

| Tapez tailles <- c(156, 164, 197) et appuyez sur entrée. Cela assigne le vecteur
| (156, 164, 197) au nouvel objet tailles. Les espaces après la virgule ne sont pas
| nécessaire mais rendent le code plus lisible.

> tailles <- c(156, 164, 197)

| That's correct!

  |=====                                                                     |   7%
| Tapez tailles pour voir son contenu. Remarquez qu'il y n'y a pas de virgules qui
| séparent les valeurs dans l'affichage.

> tailles
[1] 156 164 197

| That's the answer I was looking for.

  |=======                                                                   |  10%
| On peut combiner les vecteurs pour faire un nouveau vecteur. Créez un vecteur qui
| combine tailles, 185 et tailles encore, dans cet ordre. N'assignez pas le vecteur
| à un nouvel objet, afin qu'on puisse voir le résultat immédiatement.

> c(tailles, 185, tailles)
[1] 156 164 197 185 156 164 197

| All that hard work is paying off!

  |==========                                                                |  13%
| Les vecteurs numériques peuvent aussi servir dans des opérations. On peut par
| exemple convertir les tailles en mètres et assigner le résultat à l'objet
| tailles_m.

> tailles_m
Error: object 'tailles_m' not found
> tailles_m <- tailles

| That's not the answer I was looking for, but try again. Or, type info() for more
| options.

| Tapez tailles_m <- tailles / 100.

> tailles_m <- tailles / 100

| You are really on a roll!

  |============                                                              |  17%
| Avant de voir l'objet tailles_m, que pensez-vous qu'il contient ?

1: un vecteur de longueur 3
2: un nombre (= un vecteur de longueur 1)
3: un vecteur de longueur 0 (= un vecteur vide)

Selection: 2

| That's not exactly what I'm looking for. Try again.

| R procèce aux opérations sur les vecteurs éléments par éléments.

1: un nombre (= un vecteur de longueur 1)
2: un vecteur de longueur 0 (= un vecteur vide)
3: un vecteur de longueur 3

Selection: 1

| One more time. You can do it!

| R procèce aux opérations sur les vecteurs éléments par éléments.

1: un nombre (= un vecteur de longueur 1)
2: un vecteur de longueur 3
3: un vecteur de longueur 0 (= un vecteur vide)

Selection: 3

| Almost! Try again.

| R procèce aux opérations sur les vecteurs éléments par éléments.

1: un vecteur de longueur 0 (= un vecteur vide)
2: un nombre (= un vecteur de longueur 1)
3: un vecteur de longueur 3

Selection: 2

| One more time. You can do it!

| R procèce aux opérations sur les vecteurs éléments par éléments.

1: un vecteur de longueur 0 (= un vecteur vide)
2: un vecteur de longueur 3
3: un nombre (= un vecteur de longueur 1)

Selection: 2

| Your dedication is inspiring!

  |===============                                                           |  20%
| Affichez maintenant le résultat.

> vecteur <- tailles / 3

| You almost had it, but not quite. Try again. Or, type info() for more options.

| Il faut taper le nom d'un objet pour afficher sa valeur.

> 
> tailles / 3
[1] 52.00000 54.66667 65.66667

| You almost had it, but not quite. Try again. Or, type info() for more options.

| Il faut taper le nom d'un objet pour afficher sa valeur.

> tailles_m
[1] 1.56 1.64 1.97

| You're the best!

  |=================                                                         |  23%
| Comment vous l'avez probablement deviné, R a d'abord divisé `tailles` par 100,
| puis a stocje le résultat dans `tailles_m`. On obtient ainsi un vecteur de même
| longueur que le vecteur d'origine `tailles`.

...

  |====================                                                      |  27%
| On cherche maintenant à calculer les IMC correspondant aux tailles. Commençons
| par créer un nouveau vecteur poids, contenant les valeurs 55, 65 et 78 (dans cet
| ordre)

> poids <- c(55, 65, 78)

| You nailed it! Good job!

  |======================                                                    |  30%
| Calculons maintenant l'imc de chacun. Créez une nouvelle variable imc qui prend
| les valeurs des poids divisés par taille au carré. N'oubliez pas que la taille
| doit être en mètre !

> poids <- (c55, 65, 78) / tailles^2
Error: unexpected ',' in "poids <- (c55,"
> imc <- poids / (tailles_m)^2

| That's not the answer I was looking for, but try again. Or, type info() for more
| options.

| Tapez imc <- poids / tailles_m^2

> 
> imc <- poids / tailles_m^2

| Nice work!

  |=========================                                                 |  33%
| Quelle affirmation est vraie ?

1: Le premier élément d'`imc` est égal au premier élément de `poids` divisé par le carré du premier élément de `tailles_m`, etc.
2: `imc` est un nombre unique
3: `imc` n'est pas défini

Selection: 1

| Keep working like that and you'll get there!

  |===========================                                               |  37%
| Regardons le contenu d'`imc`.

> imc
[1] 22.60026 24.16716 20.09843

| You are really on a roll!

  |==============================                                            |  40%
| Un vecteur ne contient pas forcément que des nombres. Il peut aussi contenir des
| booléens ou des chaînes de caractères. Essayez de créer un vecteurs chiens
| contenant les race suivantes, Doberman, Chihuahua et Husky (dans cet ordre).
| Rappelez-vous comment on peut entrer des chaînes de caractères.

> "Doberman"  "Chihuahua" "Husky"
Error: unexpected string constant in ""Doberman"  "Chihuahua""
> chiens <- c("Doberman", "Chihuahua", "Husky")

| You are quite good my friend!

  |================================                                          |  43%
| Rappelez-vous néanmoins que les valeurs contenues dans un vecteur sont forcément
| du même type. Si vous entrez par exemple des nombres et des chaînes de caractères
| dans un vecteur, R convertira les nombres en chaînes de caractère.

...

  |===================================                                       |  47%
| Quand R a deux vecteurs de même longeur, R effectue les opérations spécifiée
| élément par élément. Dans le cas ou un des vecteurs est plus court que les
| autres, R 'recycle' le vecteur le plus court jusqu'à ce qu'il atteigne la
| longueur du vecteur le plus long.

...

  |=====================================                                     |  50%
| Quand on a calculé `tailles / 100` plus tôt, tailles est un vecteur de longueur
| 3, et techniquement 100 est un vecteur de longueur 1. Pour effectuer le calcul, R
| 'recycle' 100 pour en faire un vecteur de 100. En clair, l'opération réellement
| effectuée est `tailles / c(100, 100, 100)`.

...

  |=======================================                                   |  53%
| Voici un exemple de 'recyclage', plus parlant. Essayez d'ajouter `c(1, 2, 3, 4)`
| et `c(0, 10)`.

> c(1, 2, 3, 4) + c(0, 10)
[1]  1 12  3 14

| Keep working like that and you'll get there!

  |==========================================                                |  57%
| Si la longueur du vecteur le plus long n'est pas un multiple de la longueur du
| vecteur le plus court, R continuera à recycler les valeur, mais vous préviendra
| que quelque chose de potentiellement étrange se déroule.

...

  |============================================                              |  60%
| Essayez c(1, 2, 3, 4) + c(0, 10, 100) par exemple.

> c(1, 2, 3, 4) + c(0, 10, 100)
[1]   1  12 103   4
Warning message:
In c(1, 2, 3, 4) + c(0, 10, 100) :
  longer object length is not a multiple of shorter object length

| You are quite good my friend!

  |===============================================                           |  63%
| Remarquez le Warning envoye par R. Il vout signale que quelque chose de quelque
| peu inattendu est arrivé (mais il fait le calcul). Il y a de nombreuses autres
| manières de construire des vecteurs, en particulier des vecteurs de numériques.
| Nous les verrons en temps voulu.

...

  |=================================================                         |  67%
| Pour extraire un sous-vecteur de R, il faut utiliser des crochets `[]`. Si vous
| souhaitez accéder au deuxième élément du vecteur tailles, il faut taper
| `tailles[2]`.

> tailles[2]
[1] 164

| Excellent work!

  |====================================================                      |  70%
| Il est aussi possible d'exclure un sous-ensemble du vecteur en mettant un moins
| devant le ou les indices que nous souhaitons exclure. Par exemple, pour exclure
| le deuxième élément de `tailles`, il faut taper `tailles[-2]`. Essayez.

> tailles[-2]
[1] 156 197

| Excellent work!

  |======================================================                    |  73%
| Il est aussi possible d'obtenir un sous-ensemble du vecteur en utilisant un
| vecteur d'indices plutôt qu'une valeur unique. Par exemple, pour obtenir le
| premier et le troisième élément de poids, il faut taper `poids[c(1, 3)]`.
| Essayez.

> poids[c(1, 3)]
[1] 55 78

| You nailed it! Good job!

  |=========================================================                 |  77%
| Le fonctionnement est le même pour l'exclusion de sous-ensembles d'un vecteur.

...

  |===========================================================               |  80%
| Une dernière façon d'indexer des sous-ensembles est d'utiliser un vecteur de
| valeurs logiques. Essayez `tailles[c(TRUE, TRUE, FALSE)]`.

> tailles[c(TRUE, TRUE, FALSE)]
[1] 156 164

| Your dedication is inspiring!

  |==============================================================            |  83%
| Cela peut paraître inutile au premier abord, mais est en fait très utile pour
| extraire d'un vecteur des valeurs respectant une condition logique. Si on
| souhaite obtenir les seulement les poids inférieurs à 70kg par exemple, on tapera
| la commande `poids[poids < 70]`.

> poids[poids < 70]
[1] 55 65

| Perseverance, that's the answer.

  |================================================================          |  87%
| Avant de finir la leçon, je vais vous apprendre quelques techniques pour gagner
| un peu de temps. Tout à l'heure, vous avez calculé tailles / 100. Imaginons que
| vous vous soyez trompé et que vous avez divisé par 1000 plutôt que 100. Vous
| pouvez retaper toute l'expression, ou bien...

...

  |===================================================================       |  90%
| Dans beaucoup d'environnement de programmation, la flèche vers le haut vous
| permet de visualiser les commandes précédentes. Appuyez sur la flèche haut de
| votre clavier jusqu'à atteindre la commande tailles_m <- tailles / 100. Changez
| 100 en 1000 et appuyez sur entrée. Si la flèche vers le haut ne marche pas chez
| vous, tapez juste l'expression en entier.

> tailles_m <- tailles / 1000

| Great job!

  |=====================================================================     |  93%
| Enfin, imaginons que vous voulez afficher le contenu d'un objet que vous avez
| créé auparavant, mais que vous ne vous souvenez plus du nom exact, taillesm ou
| taillesM ou tailles_m. Vous pouvez essayer les deux et chercher celle qui marche,
| ou...

...

  |========================================================================  |  97%
| Vous pouvez taper les deux lettres du nom de l'objet et appuyer sur la touche Tab
| (potentiellement plusieurs fois). La plupart des environnements de programmation
| vous afficheront une liste des objets que vous avez créé qui commence par 'tail'.
| Cela s'appelle l'auto-complétion et c'est très pratique. Essayez.

> tail
function (x, ...) 
UseMethod("tail")
<bytecode: 0x558e98941e48>
<environment: namespace:utils>

| Give it another try. Or, type info() for more options.

| Si votre environnement de programmation ne vous permet pas d'utiliser
| l'auto-complétion, tapez simplement tailles_m et appuyez sur entrée pour
| continuer.

> tailles_m
[1] 0.156 0.164 0.197

| That's correct!

  |==========================================================================| 100%
| Souhaitez-vous soumettre votre progression sur Moodle à votre enseignant (cela ne
| fonctionnera que pour les étudiants de l'université Paris 8) ? Si vous ne le
| faites pas maintenant, vous pourrez toujours lui envoyer le fichier
| 'Vecteurs.txt' qui a été créé plus tard.

1: Oui
2: Non

Selection: 1

| You nailed it! Good job!

| You've reached the end of this lesson! Returning to the main menu...

| Please choose a course, or type 0 to exit swirl.

1: InitiationR
2: Take me to the swirl course repository!

Selection: 0

| Leaving swirl now. Type swirl() to resume.