---
title: "Apprendre la Programmation (en R) avec les LLMs"
subtitle: ""
author: "Elias Bouacida"
date: last-modified
date-format: long
format:
  html: default
  revealjs:
    slide-number: true
    incremental: true
    smaller: false
    scrollable: true
    link-external-newwindow: true
    output-file: slide-introduction.html
    embed-resources: true
format-links: [revealjs]
lang: fr
---

# Introduction 

## Bienvenue ! 🚀

**Apprendre la Programmation (en R) avec les LLMs**


:::: {.columns}
::: {.column width="33%"}
**🤖 LLM = Votre Assistant**

LLM : Large Language Model, aussi connu sous le nom d'IA générative

Ex : ChatGPT, Claude, Mistral, etc.
:::

::: {.column width="33%"}
**📊 R = Langage Statistique**

Pour analyser, visualiser, calculer
:::

::: {.column width="33%"}
**🎯 Objectif = Collaboration**

Programmer AVEC l'IA générative intelligemment
:::
::::

## Sondage 📊

**Levez la main si vous avez déjà (Pas de jugement ! 😊)...**

- Utilisé un LLM (ChatGPT, Claude, etc) ? 🙋‍♀️
- Demandé leur aide pour un devoir ? 📝
- Copié-collé une de leur réponse sans la comprendre ? 😅
- Fait confiance aveuglément à un LLM ? 🤖
- Payé pour un LLM ? 
- Programmé dans n'importe quel langage de programmation ? 💻


# Pourquoi ce cours ? 🎯

## Que va-t-on apprendre ?



### Comment utilisez-vous des LLMs ?



::: {.fragment}

### L'approche ici

- Poser les BONNES questions
- Vérifier et corriger les erreurs
- Comprendre les réponses
- Utiliser le LLM comme partenaire

:::

::: {.fragment}
**Objectif :** Autonomie et esprit critique

:::

::: { .notes }
Ici, demander des exemples de ce qu'ils font
:::

## Démonstration : Prompt

:::: {.columns}
::: {.column width="50%" .fragment}
### Prompt 1 (Essayez !)

```
"Fais-moi des statistiques sur mes données"
```
 
- Problème : Trop vague !
- Quelles données ?
- Quelles statistiques ?
- Quel format de sortie ?
:::

::: {.column width="49%" .fragment}
### Prompt 2

```
"J'ai 10 notes d'étudiants : 
12, 15, 18, 14, 16, 13, 17, 11, 19, 15.
Calcule la moyenne, médiane et l'écart-type
en R avec des commentaires explicatifs."
```

**Résultat :** Code précis et commenté !
:::
::::

::: {.notes}
Proposer aux étudiants de le faire eux-même.
Commencez par le prompt 1, puis les amener au prompt 2 en formalisant un peu le problème.
:::


## Objectif du cours

- Apprendre à utiliser R et Rstudio
- Apprendre à utiliser les principales librairies (aussi appelées paquets) de R pour l'analyse de données et les statistiques (le tidyverse)
- Vous apprendre à utiliser des LLMs pour faire cela



# R et Rstudio ? 📊

## R et RStudio : Vos nouveaux outils

:::: {.columns}

::: {.column width="50%" .fragment }

### R = Le Moteur 🚗

- Langage de programmation
- Spécialisé en analyse de données
- Dérive d'un langage antérieur appelé S <https://fr.wikipedia.org/wiki/S_(langage)>
- Est un [logiciel libre](https://fr.wikipedia.org/wiki/Logiciel_libre)

:::

::: {.column width="50%" .fragment }

### RStudio = L'Interface 🖥️

- Environnement convivial
- Facilite l'écriture de code R
- Intègre tout en un endroit
- Comme Word pour l'écriture

:::

::::

## Exemples concrets d'usage 🌟

- 📈 **Analyser un sondage** : "Quel pourcentage préfère le chocolat ?"
- 📊 **Créer des graphiques** : Histogrammes, courbes, diagrammes
- 🧮 **Calculs statistiques** : Moyennes, corrélations, tests
- 🏃 **Données géographiques** : Cartes
- 📋 **Nettoyer des données** : Corriger, organiser, structurer
- 🎯 **Prédictions simples** : "Quelle sera la prochaine tendance ?"

## Premier aperçu du code R

```{r moyenne}
#| echo: true
#| eval: true

# Créer une liste de notes
notes <- c(15, 12, 18, 14, 16, 13, 17)
# Calculer la moyenne
moyenne <- mean(notes)
# Afficher le résultat
print(paste("La moyenne est :", moyenne))
```

**C'est tout ! Pas si compliqué, non ?** 😊

# Comment ça marche avec un LLM ? 🤝

## Le processus en 4 étapes

1. 🎯 Formuler une question précise
   - Au lieu de "fais-moi des calculs"
   - Dire "calcule la moyenne de ces 5 notes : 12, 15, 18, 14, 16"

2. 🤖 Recevoir et comprendre la réponse
   - Le LLM vous donne du code + des explications (si vous lui demandez)

3. 🧪 Tester et vérifier
   - Exécuter le code, voir si ça marche, comprendre pourquoi

4. ✨ Améliorer si nécessaire
   - Corriger les erreurs, adapter à vos besoins

## Exemple 

Votre demande (à votre LLM préféré)
```
"J'ai des données de vente par mois :
Janvier : 1500€, Février : 2000€, Mars : 1800€
Crée un graphique en barres avec R"
```

Essayez !

## Exemple (réponse possible)


```{r vente-code}
#| eval: false
#| echo: true

# Données de vente
mois <- c("Janvier", "Février", "Mars")
ventes <- c(1500, 2000, 1800)

# Créer le graphique
barplot(ventes, names.arg = mois, 
        main = "Ventes par mois",
        ylab = "Montant (€)")
```

## Le résultat

```{r vente-graph}
#| echo: true
#| eval: true
#| fig-width: 8
#| fig-height: 4

# Testons le code !
mois <- c("Janvier", "Février", "Mars")
ventes <- c(1500, 2000, 1800)

barplot(ventes, names.arg = mois, 
        main = "Ventes par mois",
        ylab = "Montant (€)",
        col = "steelblue")
```

# Les Erreurs : Vos Amies ! 🐛

## Pourquoi on fera des erreurs

**Principe pédagogique :** Les erreurs sont des occasions d'apprentissage, pas des échecs !

- 🎯 **Développer votre esprit critique**
- 🔍 **Apprendre à déboguer**
- 🤖 **Comprendre les limites des LLM**
- 💪 **Gagner en autonomie**
- 🧠 **Mémoriser par l'expérience**



# Organisation du Cours

## 8 Séances de 3 heures 📅

Le cours est structuré en 3 phases progressives sur 8 séances de 3h.

### Phase 1 : Fondations 🌱 (Séances 1-3)

**Objectif :** Maîtriser le dialogue avec un LLM et les concepts R de base

#### Séance 1 : Premiers pas avec R

::: {.nonincremental}
- Découvrir RStudio et son interface
- Comprendre les concepts de base : objets, types, vecteurs
- Utiliser des fonctions intégrées
- Créer son premier script
- Commencer son journal de bord
:::

#### Séance 2 : Données et visualisations

::: {.nonincremental}
- Importer des données réelles (fichiers CSV)
- Explorer des dataframes
- Calculer des statistiques descriptives
- Créer des visualisations simples
- Apprendre à déboguer efficacement
:::

#### Séance 3 : Automatisation et fonctions

::: {.nonincremental}
- Utiliser des conditions (`if/else`)
- Créer des boucles (`for`, `while`)
- Écrire vos propres fonctions
- Combiner tous les concepts appris
:::

### Phase 2 : Application 🚀 (Séances 4-5)

**Objectif :** Analyser de vraies données en autonomie

#### Séance 4 : Données tabulaires et graphiques avancés

::: {.nonincremental}
- Maîtriser les dataframes complexes
- Nettoyage de données (casse, formats, incohérences)
- Visualisations avec ggplot2
- Créer des fonctions de visualisation réutilisables
:::

#### Séance 5 : Projet personnel intégré

::: {.nonincremental}
- Choix et cadrage d'un projet personnel
- Analyse complète de A à Z en autonomie
- Présentation des résultats aux pairs
:::

### Phase 3 : Expertise ⭐ (Séances 6-8)

**Objectif :** Devenir autonome et collaborer efficacement

#### Séance 6 : Organisation et modularité

::: {.nonincremental}
- Structurer son code en modules
- Découvrir l'écosystème des packages (`dplyr`, `lubridate`)
- Organiser ses fonctions en scripts thématiques
:::

#### Séance 7 : Automatisation et rapports

::: {.nonincremental}
- Automatiser des analyses répétitives
- Traiter plusieurs fichiers à la fois
- Créer des rapports reproductibles avec markdown
:::

#### Séance 8 : Projet collaboratif final

::: {.nonincremental}
- Travailler en équipe sur un grand dataset
- Code review croisé entre équipes
- Intégrer les bonnes pratiques de développement
- Présentation finale
:::

## Progression pédagogique

::: {.incremental}
- **Séances 1-3** → Bases : concepts fondamentaux et autonomie technique
- **Séances 4-5** → Application : projets personnels et analyses complètes
- **Séances 6-8** → Expertise : organisation, automatisation et collaboration
:::

::: {.fragment}
**À la fin du cours, vous serez capable de :** analyser des données en autonomie, créer vos propres outils, automatiser vos analyses, collaborer sur du code, et utiliser les LLMs comme de véritables partenaires de travail.
:::

## Structure d'une séance type

:::: {.columns}
::: {.column width="33%"}
### 🎭 Présentation
**30-60 min**

- Concepts du jour
- Démonstrations en direct
- Exemples concrets
:::

::: {.column width="33%"}
### 💻 Pratique
**90-120 min**

- Exercices sur machine
- Aide individuelle
- Déboguing collectif
:::

::: {.column width="33%"}
### 🤝 Partage
**30 min**

- Retours d'expérience
- Solutions créatives
:::
::::

# Évaluation 📊

## Une évaluation bienveillante

**Cours noté** : L'objectif est d'évaluer votre progression, pas de vous piéger !

### Composition de la note

Votre note finale est répartie en 3 composantes :

```{r notes}
#| echo: false
#| eval: true
#| fig-width: 8
#| fig-height: 5
#| fig-align: "center"

# Création d'un graphique des évaluations
library(ggplot2)
evaluations <- data.frame(
  Type = c("Journal de bord", "Mini-projets", "Participation"),
  Poids = c(40, 40, 20),
  Description = c("Apprentissage", "Rendus", "En classe")
)

ggplot(evaluations, aes(x = reorder(Type, -Poids), y = Poids, fill = Type)) +
  geom_bar(stat = "identity") +
  geom_text(aes(label = paste(Poids, "%")), vjust = -0.5, size = 6) +
  labs(y = "Pourcentage de la note", x = "") +
  theme_minimal() +
  theme(legend.position = "none",
        text = element_text(size = 14),
        axis.text.x = element_text(size = 12))
```

## 📓 Journal de bord (40%) {.smaller}

Document votre apprentissage tout au long du semestre.

**Pour chaque séance, notez :**

::: {.nonincremental}
- Les **prompts** utilisés avec les LLMs (copier-coller exact)
- Les **réponses** obtenues (copier-coller, pas de captures d'écran)
- Votre **compréhension** avec vos propres mots
- Les **difficultés** et erreurs rencontrées
- Les **solutions** trouvées
- Le **code** produit et commenté
:::

::: {.fragment}
::: {.callout-tip}
## Soyez honnête !
Documentez vos échecs comme vos réussites. C'est votre progression qui compte.
:::
:::

## 🎯 Mini-projets (40%) {.smaller}

Rendus de fin de séance à soumettre sur Moodle.

::: {.nonincremental}
- **Séance 1** : Script commenté avec analyse de données simple
- **Séance 2** : Analyse de données INSEE avec visualisations
- **Séance 3** : Fonctions personnalisées pour analyse de températures
:::

::: {.fragment}
**Critères :** Code fonctionnel, commenté, résout le problème posé
:::

## 👥 Participation (20%) {.smaller}

Votre engagement pendant les séances.

::: {.incremental}
- **Présence active** : Vous travaillez sur les exercices
- **Entraide** : Vous aidez vos camarades ou demandez de l'aide
- **Déboguing collectif** : Vous partagez vos solutions
- **Questions** : Vous posez des questions pertinentes
:::

::: {.fragment}
::: {.callout-note}
## Pas de stress !
La participation, ce n'est pas parler beaucoup, c'est être engagé dans votre apprentissage.
:::
:::


# Questions & Discussion 💬

## Vos interrogations

**Quelles sont vos questions ?** 🤔

- 🤖 Sur l'utilisation des LLM ?
- 📊 Sur le langage R ?
- 📅 Sur l'organisation du cours ?
- 📝 Sur l'évaluation ?

**Pas de question bête !** Nous sommes tous là pour apprendre ensemble 😊

# Prochaines Étapes 🎯

## Maintenant 

1. 📥 **Installer R et RStudio** (tutoriel fourni, si sur votre machine, démarrez Rstudio sinon)
2. 🔐 **Créer un compte LLM** (facultatif)
4. 🧪 **Essayer un premier prompt** simple

## Merci ! 

*N'oubliez pas : l'erreur est votre amie !* 😊

:::: {.columns}
::: {.column width="33%"}
**📚 Apprenez**
:::

::: {.column width="33%"}
**🔍 Explorez**
:::

::: {.column width="33%"}
**🎉 Réussissez**
:::
::::

## Ressources disponibles 

### 🔗 Liens utiles

::: {.nonincremental}

- Installation R/RStudio : <https://moodle.univ-paris8.fr/course/section.php?id=134073>
- Utilisation de R/Rstudio en ligne : <https://datalab.sspcloud.fr/> (Utilisez votre compte étudiant Paris 8 pour vous connecter)
- Guide des prompts efficaces : <https://www.francenum.gouv.fr/guides-et-conseils/intelligence-artificielle/generation-de-contenus-texte-image-son-video/comment-0>
<!-- - [Forum d'entraide étudiant](https://moodle.univ-paris8.fr/mod/forum/view.php?id=415534) -->

:::

## Contact et ressources 

::: {.nonincremental}
- 📧 **Email :** [elias.bouacida@univ-paris8.fr](mailto:elias.bouacida@univ-paris8.fr)
- 🌐 **Espace de cours :** [Moodle](https://moodle.univ-paris8.fr/course/view.php?id=18115)
- 🌐 **Cours :** [Cours](https://eliasbcd.github.io/rl3/)
- Bureau : Bâtiment D, Salle D115
- Permanences : Mardi 14h-16h, Mercredi 14h-16h
:::

